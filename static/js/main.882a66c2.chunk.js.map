{"version":3,"sources":["useForm.js","validateInfo.js","components/CreditCardForm.js","App.js","reportWebVitals.js","index.js"],"names":["useForm","useState","cardName","cardNumber","cardType","cardExpiration","cardSecurityCode","cardPostalCode","focus","values","setValues","errors","setErrors","handleChange","e","target","name","value","handleFocus","handleSubmit","preventDefault","creditCard","valid","number","expirationDate","cvv","cardholderName","postalCode","show","variant","message","cname","cnumber","ctype","cexp","ccvv","cpostal","trim","isValid","card","type","toUpperCase","validateInfo","CreditCardForm","className","cvc","expiry","focused","Form","onSubmit","Group","Control","id","placeholder","onChange","onFocus","Row","Col","Button","size","Alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.882a66c2.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport validateInfo from './validateInfo';\r\n\r\nconst useForm = () => {\r\n    const [values, setValues] = useState({\r\n        cardName: '',\r\n        cardNumber: '',\r\n        cardType: '',\r\n        cardExpiration: '',\r\n        cardSecurityCode: '',\r\n        cardPostalCode: '',\r\n        focus: ''\r\n    })\r\n\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleFocus = (e) => {\r\n        setValues({ \r\n            ...values,\r\n            focus: (e.target.name === 'cardSecurityCode') ? 'cvc' : e.target.name\r\n        });\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        setErrors(validateInfo(values))\r\n    };\r\n    \r\n    return { handleChange, handleFocus, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm; ","import valid from \"card-validator\";\r\n\r\nexport default function validateInfo(values) {\r\n  let errors = {};\r\n  let creditCard = valid.number(values.cardNumber);\r\n\r\n  creditCard.expirationDate = valid.expirationDate(values.cardExpiration);\r\n  creditCard.cvv = valid.cvv(values.cardSecurityCode);\r\n  creditCard.cardholderName = valid.cardholderName(values.cardName);\r\n  creditCard.postalCode = valid.postalCode(values.cardPostalCode);\r\n\r\n  errors.show = true;\r\n  errors.variant = \"danger\";\r\n  errors.message = \"An unknown error occured. Please try again later\"\r\n  errors.cname = false;\r\n  errors.cnumber = false;\r\n  errors.ctype = false;\r\n  errors.cexp = false;\r\n  errors.ccvv = false;\r\n  errors.cpostal = false;\r\n\r\n  if (values.cardPostalCode === null || !values.cardPostalCode.trim()) {\r\n    errors.message = \"Credit card postal code is not complete\";\r\n  } else if (creditCard.postalCode.isValid) {\r\n    errors.cpostal = true;\r\n  } else {\r\n    errors.message = \"Credit card postal code is invalid\";\r\n  }\r\n\r\n  //Card CVV expiration\r\n  if (values.cardSecurityCode === null || !values.cardSecurityCode.trim()) {\r\n    errors.message = \"Credit card CVC is not complete\";\r\n  } else if (creditCard.cvv.isValid) {\r\n    errors.ccvv = true;\r\n  } else {\r\n    errors.message = \"Credit card CVC is invalid\";\r\n  }\r\n\r\n  //Card Expiration Verification\r\n  if (values.cardExpiration === null || !values.cardExpiration.trim()) {\r\n    errors.message = \"Credit card expiration date is not complete\";\r\n  } else if (creditCard.expirationDate.isValid) {\r\n    errors.cexp = true;\r\n  } else {\r\n    errors.message = \"Credit card expiration date is invalid\";\r\n  }\r\n\r\n  //Card Type Verification\r\n  if (\r\n    values.cardType === null ||\r\n    !values.cardType.trim() ||\r\n    creditCard.card === null\r\n  ) {\r\n    errors.message = \"Credit card type is not complete\";\r\n  } else if (\r\n    creditCard.card.type &&\r\n    creditCard.card.type.toUpperCase() === values.cardType.toUpperCase()\r\n  ) {\r\n    errors.ctype = true;\r\n  } else {\r\n    errors.message = \"Credit card type is invalid\";\r\n  }\r\n\r\n  //Card Number Verification\r\n  if (values.cardNumber === null || !values.cardNumber.trim()) {\r\n    errors.message = \"Credit card number is not complete\";\r\n  } else if (creditCard.isValid) {\r\n    errors.cnumber = true;\r\n  } else {\r\n    errors.message = \"Credit card number is invalid\";\r\n  }\r\n\r\n  //Cardholder Name Verification\r\n  if (values.cardName === null || !values.cardName.trim()) {\r\n    errors.message = \"Cardholder name is not complete\";\r\n  } else if (creditCard.cardholderName.isValid) {\r\n    errors.cname = true;\r\n  } else {\r\n    errors.message = \"Cardholder name is invalid\";\r\n  }\r\n\r\n  if (\r\n    errors.ctype &&\r\n    errors.cname &&\r\n    errors.cnumber &&\r\n    errors.cexp &&\r\n    errors.cpostal &&\r\n    errors.ccvv\r\n  ) {\r\n    errors.variant = \"success\";\r\n    errors.message = \"Credit Card is valid\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import React from \"react\";\r\nimport useForm from \"../useForm\";\r\nimport { Button, Form, Alert, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./CreditCardForm.css\";\r\nimport Cards from \"react-credit-cards\";\r\nimport \"react-credit-cards/es/styles-compiled.css\";\r\n\r\n\r\nconst CreditCardForm = () => {\r\n  const { handleChange, handleFocus, handleSubmit, values, errors } = useForm();\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"box justify-content-center align-items-center\">\r\n          <div className=\"formDiv\">\r\n          <div className=\"creditCard\">\r\n          <Cards\r\n            cvc={values.cardSecurityCode}\r\n            expiry={values.cardExpiration}\r\n            focused={values.focus}\r\n            name={values.cardName}\r\n            number={values.cardNumber}\r\n          />\r\n          </div>\r\n          <div><h3>Credit Card Form</h3></div>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                id=\"cardName\"\r\n                data-testid=\"cardName\"\r\n                name=\"cardName\"\r\n                placeholder=\"Card holder Name\"\r\n                value={values.cardName}\r\n                onChange={handleChange}\r\n                onFocus={handleFocus}\r\n                isValid={errors.cname}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"number\"\r\n                id=\"cardNumber\"\r\n                data-testid=\"cardNumber\"\r\n                name=\"cardNumber\"\r\n                placeholder=\"Credit Card Number\"\r\n                value={values.cardNumber}\r\n                onChange={handleChange}\r\n                onFocus={handleFocus}\r\n                isValid={errors.cnumber}\r\n              />\r\n            </Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Group>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"cardType\"\r\n                    id=\"cardType\"\r\n                    data-testid=\"cardType\"\r\n                    placeholder=\"Credit Card Type\"\r\n                    value={values.cardType}\r\n                    onChange={handleChange}\r\n                    onFocus={handleFocus}\r\n                    isValid={errors.ctype}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"cardExpiration\"\r\n                    data-testid=\"cardExpiration\"\r\n                    name=\"cardExpiration\"\r\n                    placeholder=\"Expiration Date\"\r\n                    value={values.cardExpiration}\r\n                    onChange={handleChange}\r\n                    onFocus={handleFocus}\r\n                    isValid={errors.cexp}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form.Group>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    id=\"cardSecurityCode\"\r\n                    data-testid=\"cardSecurityCode\"\r\n                    name=\"cardSecurityCode\"\r\n                    placeholder=\"Security Code\"\r\n                    value={values.cardSecurityCode}\r\n                    onChange={handleChange}\r\n                    onFocus={handleFocus}\r\n                    isValid={errors.ccvv}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"cardPostalCode\"\r\n                    data-testid=\"cardPostalCode\"\r\n                    name=\"cardPostalCode\"\r\n                    placeholder=\"Zip Code\"\r\n                    value={values.cardPostalCode}\r\n                    onChange={handleChange}\r\n                    onFocus={handleFocus}\r\n                    isValid={errors.cpostal}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Button\r\n              size={\"block\"}\r\n              data-testid=\"validateButton\"\r\n              id=\"validateButton\"\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n          </div>\r\n          <Alert\r\n            id=\"alertMessage\"\r\n            data-testid=\"alertMessage\"\r\n            variant={errors.variant}\r\n            show={errors.show}\r\n          >\r\n            {errors.message}\r\n          </Alert>{\" \"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreditCardForm;\r\n","// import logo from './logo.svg';\nimport React from 'react';\nimport './components/CreditCardForm';\nimport './App.css';\nimport CreditCardForm from \"./components/CreditCardForm\";\n// import './index.test';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CreditCardForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}